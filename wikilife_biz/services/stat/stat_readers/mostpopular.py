# coding=utf-8

from wikilife_biz.services.stat.stat_readers.base_stat_reader import BaseStatReader
from wikilife_utils.date_utils import DateUtils
from operator import itemgetter


class BaseMostPopularReader(BaseStatReader):

    NODE_IDS = None

    def read_stat(self, user_id=None):
        nodes = []
        node_count_map = {}
        total = 0
        to_date = DateUtils.get_datetime_utc()
        from_date = DateUtils.add_months(to_date, -12)

        for item in self._daos.aggregation_node_dao.count_logged_nodes(node_ids=self.NODE_IDS, user_id=user_id, from_date=from_date, to_date=to_date):
            node_count_map[int(item["_id"])] = item["value"]
            total += item["value"]

        node_ids = node_count_map.keys() if user_id else self.NODE_IDS
        meta_nodes = self._daos.meta_dao.get_nodes_by_ids(node_ids)

        if total==0:
            total = 1

        for n in meta_nodes:
            count = node_count_map[n._id] if n._id in node_count_map else 0  
            per = round(count*100.0/total, 4)
            nodes.append({"id": n._id, "name": n.name, "percentage": per})

        nodes.sort(key=itemgetter("percentage"), reverse=True)

        return {
         "data": nodes
        }


class ComplaintsReader(BaseMostPopularReader):



class ConditionsReader(BaseMostPopularReader):
    NODE_IDS = [3194, 3196, 3199, 3198, 3202, 26677, 3201, 26779, 26779, 38883, 41019, 27155, 274351, 27179, 27179, 37202, 3205, 27217, 27283, 34644, 33389, 27365, 27453, 27457, 27459, 27461, 29343, 27573, 27615, 40339, 27667, 27845, 33093, 33405, 28167, 28169, 28421, 33423, 33427, 28201, 33557, 28469, 33455, 28781, 38210, 40961, 28643, 28645, 28325, 28881, 28921, 28963, 28965, 28967, 35736, 33467, 29073, 39755, 39061, 27593, 29737, 3204, 30021, 40993, 30101, 30881, 30945, 33679, 31211, 34560, 29999, 30391, 33711, 34055, 31595, 37866, 31727, 3208, 28801, 27215, 33745, 3182, 26911, 35734, 31933, 28441, 30915, 30413, 31991, 31079, 38927, 3217, 32075, 30513, 40915, 32581, 30007, 32171, 36940, 33135, 33487, 33607, 31945, 3207, 37422, 38218, 41357, 33431, 40395, 33299, 33641, 28687, 35290, 34558, 35294, 37092, 33229, 33667, 34662, 34704, 34708, 34764, 35222, 35224, 35254, 36770, 35354, 35438, 33781, 3221, 33675, 33939, 38264, 38290, 33971, 38646, 3223, 38897, 33797, 38981, 39017, 39087, 36154, 39093, 39095, 39097, 3225, 33719, 3210, 3213, 37242, 39443, 39437, 39439, 39441, 39457, 34554, 39461, 34550, 37820, 40701, 40695, 40697, 40699, 39509, 33625, 40403, 39929, 31017, 36706, 34071, 33817, 40565, 3227, 3229, 35296, 29427, 35300, 35302, 35304, 40873, 40887, 33825, 33827, 41241, 3215, 41325, 28283, 29929, 37668, 29043, 30867, 39471, 273780, 31705]
    CATEG_NODE_IDS = {28167: [], 28169: [], 28687: [], 27667: [], 35354: [], 29737: [], 27179: [], 39471: [], 26677: [], 38981: [], 36940: [], 27215: [], 27217: [], 39509: [], 39017: [], 28781: [], 3182: [], 27155: [], 40565: [], 3194: [33389, 33405, 33423, 33427, 33557, 33455, 33467, 33679, 33711, 34055, 33745, 32075, 33135, 33487, 33607, 33431, 33299, 33641, 33667, 34704, 34764, 35222, 33781, 33675, 33939, 33971, 33797, 3225, 33719, 33625, 34071, 33817, 33825, 33827], 28283: [], 3196: [37202, 27573, 28201, 40961, 28881, 39061, 30881, 38927], 3198: [27179, 27365, 27453, 27457, 27459, 27461, 29343, 27615, 40339, 27845, 28469, 28645, 27593, 30101, 30945, 34560, 26911, 35734, 31933, 28441, 30915, 31079, 38927, 37422, 35290, 34558, 35294, 36770, 35438, 3221, 38264, 3223, 39087, 36154, 39093, 39095, 39097, 37242, 39443, 39437, 39439, 39441, 39457, 34554, 39461, 34550, 37820, 40701, 40695, 40697, 40699, 3227, 3229, 35296, 29427, 35300, 35302, 35304, 41241, 30867], 3199: [40993, 32581, 35224], 3201: [], 3202: [41019, 3217], 3204: [], 3205: [], 3207: [], 3208: [], 3210: [], 3213: [], 3215: [], 27283: [], 26779: [], 28325: [], 30391: [], 31945: [], 30413: [], 37092: [], 29929: [], 40915: [], 38646: [], 31991: [], 28921: [], 28421: [], 28801: [], 28963: [], 37668: [], 28965: [], 28967: [], 31017: [], 29999: [], 30513: [], 30007: [], 38210: [], 33093: [], 38218: [], 39755: [], 38883: [], 34644: [], 36706: [], 34662: [], 31595: [], 41325: [], 29043: [], 273780: [], 41357: [], 29073: [], 38290: [], 34708: [], 35736: [], 30021: [], 40873: [], 32171: [], 274351: [], 35254: [], 40887: [], 40395: [], 33229: [], 40403: [], 31705: [], 28643: [], 37866: [], 31211: [], 31727: [], 38897: [], 39929: []}

    def read_stat(self, user_id=None):
        r = BaseMostPopularReader.read_stat(self, user_id=user_id)

        for node in r["data"]:
            node["types"] = []

            if node["id"] in self.CATEG_NODE_IDS:
                sub_node_ids = self.CATEG_NODE_IDS[node["id"]]
                meta_nodes = self._daos.meta_dao.get_nodes_by_ids(sub_node_ids)

                for meta_node in meta_nodes:
                    node["types"].append({"id": meta_node._id, "name": meta_node.name})

        return r


class MoodsReader(BaseMostPopularReader):
    NODE_IDS = [275105, 275108, 275112, 275115, 275118, 275121, 275124, 275128, 275131, 275134, 275137, 275140, 275144, 275147, 275149, 275152, 275155, 275158, 275161, 275164, 275167, 275170, 275173, 275176, 275179, 275182, 275185, 275188, 275191, 275194, 275197, 275200, 275203, 275206, 275209, 275212, 275215, 275218, 275221, 275224, 275227, 275230, 275233, 275236, 275239, 275242, 275245, 275248, 275251, 275254, 275257, 275261, 275265, 275268, 275271, 275274, 275277, 275280, 275283, 275286, 275289, 275292, 275296, 275299, 275302, 275305, 275308, 275311, 275314, 275317, 275320, 275323, 275326, 275329, 275332, 275335, 275338, 275341, 275344, 275347, 275350, 275353, 275356, 275360, 275363, 275366, 275370, 275373, 275375, 275378, 275381, 275384, 275387, 275390, 275393, 275396, 275399, 275402, 275405, 275408, 275411, 275414, 275417, 275420, 275423, 275426, 275429, 275432, 275435, 275438, 275441, 275444, 275447, 275450, 275453, 275455, 275458, 275461, 275464, 275467, 275470, 275473, 275476, 275480, 275483, 275487, 275491, 275494, 275497, 275500, 275503, 275506, 275509, 275512, 275515, 275518, 275521, 275524, 275527, 275530, 275533, 275536, 275539, 275542, 275545, 275548, 275551, 275555, 275558, 275561, 275564, 275567, 275570, 275573, 275576, 275580, 275583, 275586, 275590, 275593, 275596, 275599, 275602, 275605, 275608, 275612, 275615, 275618, 275621, 275624, 275627, 275631, 275634, 275637, 275641, 275644]
